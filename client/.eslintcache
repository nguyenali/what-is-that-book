[{"/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/index.js":"1","/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/App.js":"2","/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/pages/SavedBooks.js":"3","/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/pages/SearchBooks.js":"4","/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/components/Navbar.js":"5","/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/components/SignupForm.js":"6","/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/components/LoginForm.js":"7","/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/utils/localStorage.js":"8","/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/utils/API.js":"9","/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/utils/auth.js":"10","/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/utils/queries.js":"11","/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/utils/mutations.js":"12"},{"size":265,"mtime":1610682491535,"results":"13","hashOfConfig":"14"},{"size":1022,"mtime":1610682465352,"results":"15","hashOfConfig":"14"},{"size":2343,"mtime":1610682221376,"results":"16","hashOfConfig":"14"},{"size":4760,"mtime":1610682247505,"results":"17","hashOfConfig":"14"},{"size":2528,"mtime":1610682298791,"results":"18","hashOfConfig":"14"},{"size":3399,"mtime":1610682331266,"results":"19","hashOfConfig":"14"},{"size":2697,"mtime":1610682282110,"results":"20","hashOfConfig":"14"},{"size":792,"mtime":1610682399616,"results":"21","hashOfConfig":"14"},{"size":1391,"mtime":1610681416841,"results":"22","hashOfConfig":"14"},{"size":1233,"mtime":1610682384228,"results":"23","hashOfConfig":"14"},{"size":240,"mtime":1610682435126,"results":"24","hashOfConfig":"14"},{"size":1233,"mtime":1610683094708,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1s5z0pl",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/index.js",[],["54","55"],"/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/App.js",[],"/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/pages/SavedBooks.js",["56"],"import React from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\n\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\n\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { GET_ME } from '../utils/queries';\n\nimport { REMOVE_BOOK } from '../utils/mutations';\n\nconst SavedBooks = () => {\n    const { loading, data } = useQuery(GET_ME);\n    const [ removeBook ] = useMutation(REMOVE_BOOK);\n    \n    const userData = data?.me || {};\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n\n      const { data } = await removeBook({\n        variables: { bookId },\n      });\n\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks?.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks?.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;","/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/pages/SearchBooks.js",["57","58"],"import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\n\nimport Auth from '../utils/auth';\nimport { useMutation } from '@apollo/react-hooks';\nimport { SAVE_BOOK } from '../utils/mutations';\n\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\n\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  const [saveBook, { error }] = useMutation(SAVE_BOOK);\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${searchInput}`);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n    // get token\n    console.log('book to save', bookToSave);\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await saveBook({\n        variables: { bookData: { ...bookToSave } },\n      });\n      console.log(savedBookIds);\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Search for a book'\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type='submit' variant='success' size='lg'>\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? (\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\n                      className='btn-block btn-info'\n                      onClick={() => handleSaveBook(book.bookId)}>\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\n                        ? 'This book has already been saved!'\n                        : 'Save this Book!'}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;","/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/components/Navbar.js",[],"/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/components/SignupForm.js",[],"/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/components/LoginForm.js",[],"/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/utils/localStorage.js",[],"/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/utils/API.js",[],"/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/utils/auth.js",[],"/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/utils/queries.js",[],["59","60"],"/Users/alinguyen/bootcamp-project-files/what-is-that-book/client/src/utils/mutations.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":28,"column":15,"nodeType":"67","messageId":"68","endLine":28,"endColumn":19},{"ruleId":"65","severity":1,"message":"69","line":20,"column":22,"nodeType":"67","messageId":"68","endLine":20,"endColumn":27},{"ruleId":"65","severity":1,"message":"66","line":74,"column":15,"nodeType":"67","messageId":"68","endLine":74,"endColumn":19},{"ruleId":"61","replacedBy":"70"},{"ruleId":"63","replacedBy":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.",["72"],["73"],"no-global-assign","no-unsafe-negation"]